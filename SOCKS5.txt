// 一、
// 客户端尝试初次请求
// 服务端 接收 客户端 的验证消息：
//
// 	+----+----------+----------+
// 	|VER | NMETHODS | METHODS  |
// 	+----+----------+----------+
// 	| 1  |    1     |  1 ~ 255 |
// 	+----+----------+----------+
//
// 解释
// 	- VER       版本标识符，SOCKS5 协议标识为 '0x05'，固定长度为 1Byte
// 	- NMETHODS  方法，     表示第三个字段 METHODS 的长度，固定长度为 1Byte
// 	- METHODS   选择消息， 客户端支持的验证方式， 可变 长度 为 1~255Byte

// 二、
// 回应 客户端 是否需要身份验证
// 服务端 回应 客户端，需要客户端提供哪种验证方式：
//
// +----+--------+
// |VER | METHOD |
// +----+--------+
// | 1  |   1    |
// +----+--------+
//
// 解释
// 	- VER       SOCKS5 协议标识为 '0x05'，固定长度为 1Byte
// 	- METHOD
// 	    - '0x00' 没有认证要求
//      - '0x02' 用户名、密码认证

// 三、
// 验证通过，请求 服务端 转发
// 协商完成，服务端 接收 客户端 请求细节如下：
//
// +----+-----+-------+------+----------+----------+
// |VER | CMD |  RSV  | ATYP | DST.ADDR | DST.PORT |
// +----+-----+-------+------+----------+----------+
// | 1  |  1  | '0x00'|  1   | Variable |    2     |
// +----+-----+-------+------+----------+----------+
//
// 解释：
// 	- VER 协议版本: '0x05'
// 	- CMD
// 		- '0x01' CONNECT
// 	- RSV
//      - '0x00' 保留
// 	- ATYP 以下地址的地址类型
// 		- '0x01' IPv4地址，4字节长度
// 		- '0x03' 下面 DST.ADDR 部分第一个字节为域名长度，DST.ADDR剩余的内容为域名，没有\0结尾
// 		- '0x04' Pv6地址，16个字节长度
// 	- DST.ADDR 目的地址
// 	- DST.PORT 网络八位字节顺序中所需的目标端口

// 四、
// 服务端 转发完毕，回复 客户端
// 服务器端 回应 客户端，格式如下：
//
// +----+-----+-------+------+----------+----------+
// |VER | REP |  RSV  | ATYP | DST.ADDR | DST.PORT |
// +----+-----+-------+------+----------+----------+
// | 1  |  1  | '0x00'|  1   | Variable |    2     |
// +----+-----+-------+------+----------+----------+
//
// 解释：
// 	- VER 协议版本: '0x05'
// 	- REP
// 		- '0x00' 成功
// 	- RSV
//      - '0x00' 保留
// 	- ATYP 以下地址的地址类型
// 		- '0x01' IPv4地址，4字节长度
// 		- '0x03' 下面 DST.ADDR 部分第一个字节为域名长度，DST.ADDR剩余的内容为域名，没有\0结尾
// 		- '0x04' Pv6地址，16个字节长度
// 	- DST.ADDR 服务端监听的地址
// 	- DST.PORT 服务端监听的端口，网络字节序表示
//
// SOCKS5服务器会根据源地址和目标地址评估请求，并根据请求类型返回一个或多个回复消息
