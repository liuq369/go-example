
 原文参见：
   - https://zh.wikipedia.org/wiki/SOCKS
   - https://tools.ietf.org/html/rfc1928
   - https://tools.ietf.org/html/rfc1929
   - https://tools.ietf.org/html/rfc3089


                          SOCKS5 协议参考


一、介绍

        通过网络防火墙，将组织内部网络结构与 Internet 等外部网络有效隔离的系统变得越来越流行。这
    些防火墙系统通常充当网络之间的应用层网关，通常提供受控的 telnet，ftp，smtp 访问。随着设计用
    于促进全球信息发现的更复杂的应用层协议的出现，这些协议需要被提供用于透明和安全地遍历防火墙的通
    用框架。

        还需要以实际的方式强制验证的需求。这个要求源于各种组织网络之间的 client-server 的实现，
    并且这种关系需要加以控制，往往是强而有力的认证。

        此处描述的协议旨在为 TCP 和 UDP 域中的 client-server 应用程序提供一个框架，以便使网
    络防火墙的服务变得简单和安全。该协议在概念上是应用层和传输层之间的“填隙层”，因此不提供网络层网
    关服务，如转发ICMP消息。


二、基于 TCP 客户端的程序

        当一个基于 TCP 的客户端希望与一个只能通过防火墙访问的对象建立连接（这种决定留给实施）时，
    它必须打开一个 TCP 连接到 SOCKS 服务器系统上相应的 SOCKS 端口。SOCKS 服务通常位于 TCP -
    端口 1080 。如果连接请求成功，则客户端输入所使用的认证方法的协商，使用所选择的方法进行认证，然
    后发送中继请求。 SOCKS 服务器评估请求，并建立适当的连接或拒绝它。

        客户端给服务端发送验证消息：[版本标识符] [方法] [选择消息]

                    +----+----------+----------+
                    |VER | NMETHODS | METHODS  |
                    +----+----------+----------+
                    | 1  |    1     |  1 ~ 255 |
                    +----+----------+----------+

        解释
            - VER       SOCKS5 协议标识为 '0x05'，固定长度为 1Byte
            - NMETHODS  表示第三个字段 METHODS 的长度，固定长度为 1Byte
            - METHODS   客户端支持的验证方式， 可变 长度 为 1~255Byte

        服务端回应客户端，需要客户端提供哪种验证方式：

                          +----+--------+
                          |VER | METHOD |
                          +----+--------+
                          | 1  |   1    |
                          +----+--------+

        解释
            - VER       SOCKS5 协议标识为 '0x05'，固定长度为 1Byte
            - METHOD
              - '0x00' 没有认证要求
              - '0x02' 用户名+密码
              - '0xff' 客户端必须关闭连接

        客户端和服务器然后输入方法特定的子协商。

        对此协议的新方法支持的开发人员应联系 IANA 获取方法编号。被分配的数字文件应该被引用到方法
    号码及其相应协议的当前列表中。


三、建立连接（用户名+密码）

        一旦 SOCKS5 服务器启动，并且客户端选择了 用户名+密码 认证协议，用户名+密码 子协商就开始
    了。这从客户端产生 用户名+密码 请求开始：

                +----+------+----------+------+----------+
                |VER | ULEN |  UNAME   | PLEN |  PASSWD  |
                +----+------+----------+------+----------+
                | 1  |  1   |  1 ~ 255 |  1   |  1 ~ 255 |
                +----+------+----------+------+----------+

        解释
            - VER 子协商的当前版本，即 '0x01'
            - ULEN 后面的 UNAME 字段的长度
            - UNAME 源操作系统已知的用户名
            - PLEN 后面的 PASSWD 字段的长度
            - PASSWD 与给定 UNAME 的密码关联

        服务器验证提供的 UNAME 和 PASSWD，并发送以下响应：

                            +----+--------+
                            |VER | STATUS |
                            +----+--------+
                            | 1  |   1    |
                            +----+--------+

        STATUS 值
            - '0x00' 状态字段表示成功
            - '0x01' 表示失败，会关闭连接


四、要求

        一旦方法相关的子协商完成，客户端发送请求细节。如果协商的方法包括用于完整性检查和/或机密性
    的封装，则这些请求必须被封装在依赖于方法的封装中。

        SOCKS 请求形成如下：

                +----+-----+-------+------+----------+----------+
                |VER | CMD |  RSV  | ATYP | DST.ADDR | DST.PORT |
                +----+-----+-------+------+----------+----------+
                | 1  |  1  | '0x00'|  1   | Variable |    2     |
                +----+-----+-------+------+----------+----------+

        解释：
            - VER 协议版本: '0x05'
            - CMD
              - '0x01' CONNECT
              - '0x02' BIND
              - '0x03' UDP 关联
            - RSV  RESERVED
            - ATYP 以下地址的地址类型
              - '0x01' IPv4
              - '0x03' domainName
              - '0x04' IPv6
            - DST.ADDR 目的地址
            - DST.PORT 网络八位字节顺序中所需的目标端口

        SOCKS 服务器通常会根据源地址和目标地址评估请求，并根据请求类型返回一个或多个回复消息。


五、地址

        地址字段（DST.ADDR、BND.ADDR）中，ATYP 字段类型包含字段中包含的地址：

            - '0x01' 该地址是 ipv4 地址，长度为4个八位字节。

            - '0x03' 包含一个完全合格的域名。地址字段的第一个八位字节包含后面的八位字节数，没有
                        终止的NUL八位字节。

            - '0x04' 该地址是 ipv6 地址，长度为16个八位字节。


六、回复

        SOCKS 请求信息一旦与 SOCKS 服务器建立连接，就由客户端发送，并完成认证协商。服务器评估请
    求，并返回一个形成如下的答复：

            +----+-----+-------+------+----------+----------+
            |VER | REP |  RSV  | ATYP | BND.ADDR | BND.PORT |
            +----+-----+-------+------+----------+----------+
            | 1  |  1  |'0x00' |  1   | Variable |    2     |
            +----+-----+-------+------+----------+----------+

        解释：
            - VER 协议版本: '0x05'
            - REP 应答字段：
              - '0x00' 表示成功
              - '0x01' 普通SOCKS服务器连接失败
              - '0x02' 现有规则不允许连接
              - '0x03' 网络不可达
              - '0x04' 主机不可达
              - '0x05' 连接被拒
              - '0x06' TTL超时
              - '0x07' 不支持的命令
              - '0x08' 不支持的地址类型
              - '0x09' 0xff 未定义
            - RSV   RESERVED
            - ATYP  以下地址的地址类型
              - '0x01' IPv4
              - '0x03' 域名
              - '0x04' IPv6
            - BND.ADDR 服务器绑定地址
            - BND.PORT 服务器绑定的端口以网络八位字节顺序

        标有 RESERVED（RSV）的域必须设置为 '0x00'

        如果所选择的方法包括用于认证，完整性和/或机密性的封装，则应答被封装在依赖于方法的封装中。

    CONNECT（连接）

            在对 CONNECT 的回复中，BND.PORT 包含服务器分配用于连接目标主机的端口号，而 BND-
        .ADDR 则包含关联的 ip 地址。提供的 BND.ADDR 通常与客户端用来访问 SOCKS 服务器的 IP
        地址不同，因为这些服务器通常是多宿主的。预计 SOCKS 服务器将使用 DST.ADDR 和 DST.PORT
        ，以及客户端源地址和端口来评估 CONNECT 请求。

    BIND（绑定）

            BIND 请求用于要求客户端接受来自服务器的连接的协议。ftp 是一个众所周知的例子，它使用
        主要客户端到服务器连接来执行命令和状态报告，但可以使用服务器到客户端连接来按需传送数据（例
        如 ls、get、put）。

            预期应用协议的客户端在使用 CONNECT 建立主连接之后将仅使用 BIND 请求建立辅助连接。
        预计 SOCKS 服务器将在评估 BIND 请求时使用 DST.ADDR 和 DST.PORT。

            BIND 操作期间，SOCKS 服务器将两个应答发送到客户端。第一个是在服务器创建并绑定一个
        新套接字后发送的。 BND.PORT 字段包含 SOCKS 服务器分配用于侦听传入连接的端口号。BND.-
        ADDR 域包含关联的 ip 地址。 客户端通常会使用这些信息来通知（通过主或控制连接）应用服务器
        的集合地址。 第二个回复仅在预期的传入连接成功或失败后才会发生。

    UDP ASSOCIATE（UDP 关联）

            UDP ASSOCIATE 请求用于在 UDP 中继过程中建立关联以处理 UDP 数据报。 DST.ADDR
        和 DST.PORT 字段包含客户端期望用于发送 UDP 数据报进行关联的地址和端口。服务器可以使用这
        些信息来限制访问权限。如果客户端在 UDP ASSOCIATE 时没有拥有这些信息，那么客户端必须使用
        一个全零的端口号和地址。

            当 UDP 关联请求到达的 TCP 连接终止时，UDP 关联终止。

            在对 UDP ASSOCIATE 请求的回复中，BND.PORT 和 BND.ADDR 字段指出了客户端必须发
        送 UDP 中继请求消息的 端口号/地址。

    Reply Processing（回复处理）

            当回复（'0x00' 以外的 REP 值）表示失败时，SOCKS 服务器必须在发送应答后立即终止 T-
        CP 连接。检测到导致故障的情况后，这个时间不能超过 10秒。

            如果回复代码（'0x00' 的 REP 值）表示成功，并且请求是 BIND 或 CONNECT，则客户端现
        在可以开始传递数据。如果所选的认证方法为了完整性，认证和/或机密性的目的而支持封装，则使用
        依赖于方法的封装来封装数据。同样，当数据报到达客户端的 SOCKS 服务器时，服务器务必将数据封
        装为适用于正在使用的认证方法。


七、安全事项

        本文档介绍了 ip 网络防火墙的应用层穿越协议。这种遍历的安全性高度依赖于特定实现中提供的特
    定认证和封装方法，并且在SOCKS客户端和SOCKS服务器之间的协商期间被选择。

        本文档描述了一个为 SOCKS 协议提供认证服务的子协商。由于请求以明文形式输入密码，因此不建
    议在“嗅探”可行和实用的环境中使用该子协商。

        管理员应该仔细考虑选择认证方法。
